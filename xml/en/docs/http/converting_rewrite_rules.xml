<!DOCTYPE article SYSTEM "../../../../dtd/article.dtd">

<article title="Converting rewrite rules"
         link="/en/docs/http/converting_rewrite_rules.html"
         lang="en">


<section name="A redirect to a main site">

<para>
People who during their shared hosting life used to configure
<i>everything</i> using <i>only</i> Apache&rsquo;s .htaccess files,
usually translate the following rules:

<programlisting>
RewriteCond  %{HTTP_HOST}  nginx.org
RewriteRule  (.*)          http://www.nginx.org$1
</programlisting>

to something like this:

<programlisting>
server {
    listen       80;
    server_name  www.nginx.org  nginx.org;
    if ($http_host = nginx.org) {
        rewrite  (.*)  http://www.nginx.org$1;
    }
    ...
}
</programlisting>
</para>

<para>
This is a wrong, cumbersome, and ineffective way.
The right way is to define a separate server for <url>nginx.org</url>:

<programlisting>
server {
    listen       80;
    server_name  nginx.org;
    return       301 http://www.nginx.org$request_uri;
}

server {
    listen       80;
    server_name  www.nginx.org;
    ...
}
</programlisting>

<note>
On versions prior to 0.9.1, redirects can be made with:
<programlisting>
    rewrite      ^ http://www.nginx.org$request_uri?;
</programlisting>
</note>

</para>

</section>


<section>

<para>
Another example.
Instead of the &ldquo;upside-down&rdquo; logic &ldquo;all that is not
<url>nginx.com</url> and is not <url>www.nginx.com</url>&rdquo;:

<programlisting>
RewriteCond  %{HTTP_HOST}  !nginx.com
RewriteCond  %{HTTP_HOST}  !www.nginx.com
RewriteRule  (.*)          http://www.nginx.com$1
</programlisting>

one should simply define <url>nginx.com</url>, <url>www.nginx.com</url>,
and &ldquo;everything else&rdquo;:

<programlisting>
server {
    listen       80;
    server_name  nginx.com www.nginx.com;
    ...
}

server {
    listen       80 default_server;
    server_name  _;
    return       301 http://nginx.com$request_uri;
}
</programlisting>

<note>
On versions prior to 0.9.1, redirects can be made with:
<programlisting>
    rewrite      ^ http://nginx.com$request_uri?;
</programlisting>
</note>

</para>

</section>


<section id="converting_mongrel_rules"
        name="Converting Mongrel rules">

<para>
Typical Mongrel rules:

<programlisting>
DocumentRoot /var/www/myapp.com/current/public

RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
RewriteCond %{SCRIPT_FILENAME} !maintenance.html
RewriteRule ^.*$ %{DOCUMENT_ROOT}/system/maintenance.html [L]

RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^(.*)$ $1 [QSA,L]

RewriteCond %{REQUEST_FILENAME}/index.html -f
RewriteRule ^(.*)$ $1/index.html [QSA,L]

RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^(.*)$ $1/index.html [QSA,L]

RewriteRule ^/(.*)$ balancer://mongrel_cluster%{REQUEST_URI} [P,QSA,L]
</programlisting>

should be converted to

<programlisting>
location / {
    root       /var/www/myapp.com/current/public;

    try_files  /system/maintenance.html
               $uri  $uri/index.html $uri.html
               @mongrel;
}

location @mongrel {
    proxy_pass  http://mongrel;
}
</programlisting>
</para>

</section>

</article>
