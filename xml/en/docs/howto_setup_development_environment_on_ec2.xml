<?xml version="1.0"?>

<!--
  Copyright (C) Nginx, Inc.
  -->

<!DOCTYPE article SYSTEM "../../../dtd/article.dtd">

<article name="Setting up development environment with nginx on Amazon EC2"
         link="/en/docs/howto_setup_development_environment_on_ec2.html"
         lang="en"
         rev="1">

<section>

<para>
As an ISV participating in AWS Solution Providers Program, nginx is
offering an automated install script for use with AWS EC2 instances.
This helper script is targeted at the developers who have just
started using nginx and EC2, and who would like to get things up quickly
and efficiently. Please check the action list below in order to
prepare your virtual machine and nginx configuration.
</para>

<para>
To set up a development environment:
<list type="bullet">
<listitem>
Follow the
<link url="http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/Welcome.html">
Get Started with EC2</link> guide to sign up to AWS and
launch your EC2 instance. Only Amazon Linux is supported, so please
choose either “Basic 32-bit Amazon Linux AMI” or
“Basic 64-bit Amazon Linux AMI” for an AMI. When configuring
the firewall rules, it is necessary to add a rule to accept web
traffic on port 80.
</listitem>

<listitem>
As soon as the new instance is launched, log in to it and
download <literal>aws_nginx_setup.sh</literal> script with the
following command:
<programlisting>
wget http://nginx.org/download/aws_nginx_setup.sh
</programlisting>
then run the script with root privileges:
<programlisting>
sudo sh ./aws_nginx_setup.sh
</programlisting>
</listitem>

<listitem>
You will be asked to select what components to install. Currently
it is possible to choose Django, Pyramid, Ruby on Rails or PHP
development environment. After you have selected the necessary
component, the script will automatically prepare its configuration
for use with nginx. There will be a separate user created too,
and then a sample web application is started to ensure everything
is working correctly.
</listitem>

<listitem>
After the installation completes and the web application is installed
in a subdirectory inside <path>/var/www</path>, the script will print how to
start/stop sample application. For example, the Rails application will
reside in <path>/var/www/rails</path>, and Rails specific part of nginx
configuration will be in <path>/etc/nginx/conf.d/rails.conf</path>.
Installed application and configuration files can be used as a basis for
further development.
</listitem>
</list>
</para>

</section>

</article>
